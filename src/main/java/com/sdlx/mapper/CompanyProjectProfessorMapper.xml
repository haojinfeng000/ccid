<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdlx.dao.CompanyProjectProfessorMapper">
  <resultMap id="BaseResultMap" type="com.sdlx.model.CompanyProjectProfessor">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMPANY_PROJECT_ID" jdbcType="INTEGER" property="companyProjectId" />
    <result column="PROFESSOR_ID" jdbcType="INTEGER" property="professorId" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, COMPANY_PROJECT_ID, PROFESSOR_ID, CREATE_DATE, UPDATE_DATE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from COMPANY_PROJECT_PROFESSOR
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from COMPANY_PROJECT_PROFESSOR
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sdlx.model.CompanyProjectProfessor">
    insert into COMPANY_PROJECT_PROFESSOR (ID, COMPANY_PROJECT_ID, PROFESSOR_ID, 
      CREATE_DATE, UPDATE_DATE)
    values (#{id,jdbcType=INTEGER}, #{companyProjectId,jdbcType=INTEGER}, #{professorId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sdlx.model.CompanyProjectProfessor">
    insert into COMPANY_PROJECT_PROFESSOR
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="companyProjectId != null">
        COMPANY_PROJECT_ID,
      </if>
      <if test="professorId != null">
        PROFESSOR_ID,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyProjectId != null">
        #{companyProjectId,jdbcType=INTEGER},
      </if>
      <if test="professorId != null">
        #{professorId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdlx.model.CompanyProjectProfessor">
    update COMPANY_PROJECT_PROFESSOR
    <set>
      <if test="companyProjectId != null">
        COMPANY_PROJECT_ID = #{companyProjectId,jdbcType=INTEGER},
      </if>
      <if test="professorId != null">
        PROFESSOR_ID = #{professorId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdlx.model.CompanyProjectProfessor">
    update COMPANY_PROJECT_PROFESSOR
    set COMPANY_PROJECT_ID = #{companyProjectId,jdbcType=INTEGER},
      PROFESSOR_ID = #{professorId,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>